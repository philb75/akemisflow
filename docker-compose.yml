version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: akemisflow_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: akemisflow_dev
      POSTGRES_USER: akemisflow
      POSTGRES_PASSWORD: dev_password_2024
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - akemisflow
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U akemisflow -d akemisflow_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching (optional, for future use)
  redis:
    image: redis:7-alpine
    container_name: akemisflow_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - akemisflow
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # pgAdmin for database management (development only)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: akemisflow_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@akemisflow.local
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json:ro
    ports:
      - "8080:80"
    networks:
      - akemisflow
    depends_on:
      postgres:
        condition: service_healthy
    profiles:
      - dev  # Only start with: docker-compose --profile dev up

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  akemisflow:
    driver: bridge
    name: akemisflow_network